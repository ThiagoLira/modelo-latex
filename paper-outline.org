# #+LaTeX_HEADER: \input{miolo-preambulo.tex}

#+BIBLIOGRAPHY: bibliografia plain

#+LaTeX_HEADER: \usepackage{amsmath,amssymb}
#+LaTeX_HEADER: \usepackage{empheq}

** Introduction
The prediction of the compressive strength of cement is of the utmost importance on the Civil Construction industry, 
given that this quantity is one of the factors to assess the quality of the cement.

The 28-day compressive strength is choosen as a proxy to measure the quality of the cement, and the variance of these measurements can indicate the stability of the industrial proccess. 

So, it is important for the factory to have a system that, detecting drops on the quality of the cement, can point to anomalies on the proccess (e.g. concentration of reagents) 
probably causing it. 

Past work:
  cite:greciaLin makes the distinction between dynamic and static models to predict the compressive strength. They propose a dynamic moving window linear regression that 
  recalculates it's regression parameters every time a new RC28 measurement is made. 

There were recent advancements of the state of the art on the time series prediction problem using Bayesian Deep Learning Methods. 

- Deep Factors cite:deepfactors : The Deep Factors Model combines a LSTM time series regression model to model the "global" part of the predictions, and a Gaussian Process to model the "local" part
  i.e. the noise and uncertainty.
 
- DeepAR cite:deepar : This model uses an autoregressive RNN architecture to model the probability distribution of a time series. The likelihood function can be choosen given the statistical 
  characteristics of the problem. For this problem we use a Gaussian Likelihood.

- Encoder Decoder Forecaster cite:ubertime  : This model by Uber implements a Bayesian Neural Network (BNN) via the Monte Carlo Dropout technique (a variational inference aproximation), 
  which them enables the model to decompose it's prediction uncertainty into three types:
  model uncertainty, inherent noise and model misspecification.
   
** Data 

The data represents 8 years of cement production on a medium sized factory, located on the city of Cajati. 

For the models, we use the the data from the last phase of the production of cement. The measurements represent the cement when it is ready to be shipped.

From this data, we remove the columns of measurements that had a frequency too little to be of use statistically (i.e. < 70% of all days with data).

The data is first resampled (and filled with the mean in the case of missing values) so that we can have daily measurements. Since we are dealing with inputs of variying orders of magnitude,
we first rescale the data with the minmax method.

After cleaning, the columns of data with enough data to be useful at the learning task are: 

 - Percentages related to chemical composition: AL_{2}O_3, SIO_2, MGO, RICARB, P_{2}O_5 and FE_{2}O_3. 
 - Percentage of the matter of water relative to the cement: AGP
 - Time (seconds) that the material takes to begin hardening and to finish hardening, respectively: IP, FP
 - Blaine fineness, measured in square centimeters per gram: SBL
 - Percentage of Mass lost on furnace: FP

Using the Machine Learning approach cite:dlbook, 
we shall let the model learn by itself what parameters to give more importance, thus not doing any /feature engineering/ prior to training the model. As it is common on machine learning models.


So, every day $t$ a new lot of cement is ready and expedited from the factory. This lot yet doesn't have RC3, RC7 or RC28 measurements yet made. The task is to predict with a margin of confidence 
the RC28 value of this specific lot. From this lot we have multiple concentrations and quantities of reagents annotated from the factory as inputs.

Following the lead of cite:greciaLin, we will have the RC3 and RC7 measurements along with the other inputs. But if we are predicting the compressive strength of day $t$, the RC3 and RC7 measurements
will come from the last lots of cement of which this measurement is avaliable on that day i.e. from the lots of the days $t-3$ and $t-7$ respectively.

We shall use data from 2007 to 2016 as our training data, and from 2016 and onward as our validation data. The models then should learn how to use the past information on cement production to predict
the future. It's expected that the validation error will increase the farther we try to predict the RC28 measure on the future.


** Experiments

All models were implemented using PyTorch cite:pytorch, for the Gaussian Processes we used GPyTorch cite:gpytorch. The hyperparameters chosen for each model are shown on Table [?]. 
 
Every RNN based model will have a certain window of data as input to predict the next day of RC28. The size of this window is fixed across models so that we might compare it's accuracies. 
 
The models forecast performance will be evaluated by two metrics: One of which, the Quantile Loss (or \rho-risk), will assess the quality of the uncertainty measure,
and the RMSE will assess the error. 
 
Given a true value y_{t} and a quantile prediction y^*_t(\rho), with  1 > \rho > 0. The Quantile Loss is defined as:


#+BEGIN_EXPORT latex
\begin{equation*}
  \mathcal{QL}_{\rho}(y_{t},y^{*}_{t}(\rho)) =
\begin{cases}
  2 \rho(y_{t} - y^{*}_{t}(\rho)) & \text{if }  y_{t} - y^{*}_{t}(\rho) > 0 \\
  2 (1 - \rho)(y^{*}_{t}(\rho) - y_{t}) & \text{if } y_{t} - y^{*}_{t}(\rho) \leq 0
\end{cases}
\end{equation*}
#+END_EXPORT

To compare the models we shall use the normalized sum of quantile losses, or \rho-risk. 
\\
#+BEGIN_EXPORT latex
\begin{equation*}
\sum_{t}\frac{\mathcal{QL}_{\rho}(y_{t},y^{*}_{t})}{\sum_{t}y_{t}}
\end{equation*}

#+END_EXPORT

We will use the values of \rho 0.5 and 0.9. These values can be understood as the expected error on 50% and 90% of the sampled values, respectively. 
The .5-risk is equivalent to the mean absolute percentage error (MAPE).
\\
\\
The RMSE loss is defined as:
\\
#+BEGIN_EXPORT latex
\begin{equation*}
\sum^n_{t}\sqrt{\frac{(y_t - \hat{y_t})^2}{n}}
\end{equation*}
#+END_EXPORT

We shall compare the accuracy of the models as time passes. The models are trained with data containing some last day T, 
the validation data follows imediatly after T, and we evaluate the model's average accuracy with a increasing number of days of prediction after T.

#+BEGIN_center
# #+CAPTION: RMSE as a function of the date using the model Deep AR
#+ATTR_LaTeX: :height 0.3\textwidth :center
[[file:~/Dropbox/Mestrado/Intercement/paper_img/rmse_deep_ar.pdf]] 
#+ATTR_LaTeX: :height 0.3\textwidth :center
[[file:~/Dropbox/Mestrado/Intercement/paper_img/rmse_deep_factors.pdf]] 
#+ATTR_LaTeX: :height 0.3\textwidth :center
[[file:~/Dropbox/Mestrado/Intercement/paper_img/rmse_enc_dec.pdf]] 
#+END_center


We now plot the predictions for 300 days after T of the models against it's true values, to evaluate the distribution of the predicted values.

#+BEGIN_center
# #+CAPTION: Scatter Plot of the Predictions as a function of the True Values
#+ATTR_LaTeX: :height 0.3\textwidth :center
[[file:~/Dropbox/Mestrado/Intercement/paper_img/qq_deep_ar.pdf]] 
#+ATTR_LaTeX: :height 0.3\textwidth :center
[[file:~/Dropbox/Mestrado/Intercement/paper_img/qq_deep_factors.pdf]] 
#+ATTR_LaTeX: :height 0.3\textwidth :center
[[file:~/Dropbox/Mestrado/Intercement/paper_img/qq_enc_dec.pdf]] 
#+END_center

To evaluate the quality of the uncertainty measures, we shall use the .5 risk and .9 risk metrics. For each model 
we wil compare the risks for the predictions of the next day, the next 3 days and the next 7 days. 

#+BEGIN_center

| Encoder Decoder | .5 risk | .9 risk |
|             24h |   0.004 |   0.025 |
|              3d |   0.005 |    0.02 |
|              7d |   0.011 |   0.037 |

|    Deep Factors | .5 risk | .9 risk |
|             24h |   0.001 |   0.036 |
|              3d |   0.009 |   0.031 |
|              7d |   0.023 |   0.027 |

|         Deep AR | .5 risk | .9 risk |
|             24h |   0.009 |   0.004 |
|              3d |   0.018 |   0.008 |
|              7d |   0.044 |   0.016 |

#+END_center

** Conclusion

This work has applied Bayesian Deep Learning techniques to the modeling of uncertainty of cement strength prediction. The results of the RMSE measures are similar to state of the art results using
linear regression based techniques. We present results of uncertainty metrics using multiple models and time horizons, to serve as a benchmark for future work on this direction.

#+BEGIN_EXPORT latex
\bibliographystyle{plain}
\bibliography{bibliografia}{}
#+END_EXPORT 
